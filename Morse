#define CLS system("cls")
#define FLUSH fflush(stdin)
#define PAUSE system("pause")

#include <stdlib.h>
#include <stdio.h>
#include <time.h>

//	Prototype Functions Here
void bankMenu(double morseMoney[]);
void currentMoney(double morseMoney[]);
void mainMenu();
int whichHorseWins();
//	End Prototype Functions

void main() {
	mainMenu();
}

	void bankMenu(double morseMoney[]) {

		int bSelection = 0;
		double moneyAmount = 0;

		do {	// Begin Menu Loop

			CLS;

			currentMoney(morseMoney);

			printf("What would you like to do? \n");
			printf("\n 1. Make a withdrawal");
			printf("\n 2. Make a Deposit");
			printf("\n 3. Balance Inquiry");
			printf("\n 4. Cancel");

			printf("\n Enter Selection: ");
			scanf_s("%i", &bSelection); FLUSH;

			switch (bSelection) { // Begin switch

			case 1:

				printf("How much would you like to withdraw?\nAmount: ");
				scanf_s("%lf", &moneyAmount);

				if (morseMoney[1] < moneyAmount) {	//	Insufficient Funds
					printf("You don't have enough money!\n");
					PAUSE;
				} 
				else {
					morseMoney[1] -= moneyAmount;	//	Transfer From Bank to Wallet
					morseMoney[0] += moneyAmount;
				}

				break;

			case 2:

				printf("How much would you like to deposit?\nAmount: ");
				scanf_s("%lf", &moneyAmount);

				if (morseMoney[0] < moneyAmount) {	//	Insufficient Funds
					printf("You don't have enough money!\n");
					PAUSE;
				}
				else {
					morseMoney[0] -= moneyAmount;	//	Transfer From Wallet to Bank
					morseMoney[1] += moneyAmount;
				}

				break;

			case 3:

				printf("Look at the top of the screen, Dummy.");
				break;

			case 4:
				printf("\nReturning to the main menu.\n");
				break;

			default:	//	Error Checking
				printf("Please enter a valid option \n");
				PAUSE;
				break;
			} // End switch

		} while (bSelection != 3);

	}

	void mainMenu() {

		int mSelection = 0;	//	Menu choice
		double morseMoney[2] = { 0 , 300 };	//	Element 0 is Wallet, Element 1 is Bank

		do {	// Begin Menu Loop

			CLS;

			currentMoney(morseMoney);	//	Banner Display

			printf("What would you like to do? \n");
			printf("\n 1. Go to the Bank");
			printf("\n 2. Place a bet");
			printf("\n 3. Go to the track");
			printf("\n 4. View Past Winners");
			printf("\n 5. Go Home");

			printf("\n Enter Selection: ");
			scanf_s("%i", &mSelection); FLUSH;

			switch (mSelection) { // Begin switch

			case 1:

				bankMenu(morseMoney);	//	To the Bank

				break;

			case 2:
			
				break;

			case 3:
		
				break;

			case 4:
			
				break;

			case 5:

				break;

			default:	//	Error Checking
				printf("Please enter a valid option \n");
				break;
			} // End switch

			PAUSE;

		} while (mSelection != 5);

	}	//	End Menu Function


	void currentMoney(double morseMoney[])	{	//	Banner across top to show current money

			printf("---------------------------------------------------------------------\n\n");
			printf("\tMoney In Wallet: %.2lf\tMoney In Bank: %.2lf", morseMoney[0], morseMoney[1]);
			printf("\n\n---------------------------------------------------------------------\n\n");

	}

	int whichHorseWins() {

			int x;	//	Dice Roll for odds

			srand(time(NULL));
			x = rand() % 100 + 1;

			if (x >= 1 && x <=30) {	//	30% Horse 1
				return 1;
			}
			else if (x >= 31 && x <= 40) {	//	10% Horse 2
				return 2;
			}
			else if (x >= 41 && x <= 48) {	//	8% Horse 3
				return 3;
			}
			else if (x >= 49 && x <= 54) {	//	6% Horse 4
				return 4;
			}
			else if (x >= 55 && x <= 56) {	//	2% Horse 5
				return 5;
			}
			else if (x >= 57 && x <= 60) {	//	4% Horse 6
				return 6;
			}
			else if (x >= 61 && x <= 68) {	//	8% Horse 7
				return 7;
			}
			else if (x >= 69 && x <= 78) {	//	10% Horse 8
				return 8;
			}
			else if (x >= 79 && x <= 100) {	//	22% Horse 9
				return 9;
			}

	}
